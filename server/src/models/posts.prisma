model postCategory {
  id       Int     @id @default(autoincrement())
  category String
  slug     String?
  posts    posts[]
}

model posts {
  id             Int            @id @default(autoincrement())
  title          String
  content        String         @db.Text
  image          String?
  slug           String         @unique
  status         RolePost       @default(ide)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  user           users          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String
  postLikes      postLikes[]
  postViews      postViews[]
  postPomments   postPomments[]
  postDonates    postDonates[]
  postCategory   postCategory?  @relation(fields: [postCategoryId], references: [id])
  postCategoryId Int?
}

model postLikes {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String // This field seems to be the issue
  posts     posts?   @relation(fields: [postId], references: [id])
  postId    Int?
}

model postViews {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  posts     posts?   @relation(fields: [postId], references: [id])
  postId    Int?
}

model postPomments {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  posts     posts?   @relation(fields: [postId], references: [id])
  postId    Int?
}

model postDonates {
  id      Int    @id @default(autoincrement())
  content String @unique
  user    users  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String

  posts  posts? @relation(fields: [postId], references: [id])
  postId Int?
}
